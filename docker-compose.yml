version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: qualitydemo-db
    environment:
      POSTGRES_DB: qualitydemo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: qualitydemo-web
    command: sh -c "uv sync --frozen && uv run python manage.py migrate && uv run python manage.py collectstatic --noinput && uv run gunicorn qualitydemo.wsgi:application -c gunicorn.conf.py"
    environment:
      DB_ENGINE: postgresql
      DB_NAME: qualitydemo
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 5432
      ENABLE_OTEL: "true"
      OTEL_SERVICE_NAME: django-quality-demo
      OTEL_SERVICE_VERSION: "0.1.0"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://alloy:4318
      OTEL_ENVIRONMENT: development
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - django_logs:/logs/django
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: qualitydemo-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
      - nginx_logs:/logs/nginx
    ports:
      - "8080:80"
    depends_on:
      - web

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: qualitydemo-nginx-exporter
    command:
      - '-nginx.scrape-uri=http://qualitydemo-nginx:80/metrics'
    ports:
      - "9113:9113"
    depends_on:
      - nginx

  alloy:
    image: grafana/alloy:latest
    container_name: qualitydemo-alloy
    volumes:
      - ./alloy-config.alloy:/etc/alloy/config.alloy
      - nginx_logs:/logs/nginx:ro
      - django_logs:/logs/django:ro
      - ${DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock:ro
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    ports:
      - "12345:12345"  # Alloy UI
      - "14318:4318"    # OTLP HTTP receiver (using 14318 to avoid conflict with Tempo)
    depends_on:
      - nginx
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
  nginx_logs:
  django_logs:

networks:
  default:
    name: grafana-demo_grafana-network
    external: true
